/*
문제
자연수 N개와 질문 M개가 모두 주어졌을 때, 명우의 대답을 구하는 프로그램을 작성하시오.

입력
첫째 줄에 수열의 크기 N (1 ≤ N ≤ 2,000)이 주어진다.
둘째 줄에는 홍준이가 칠판에 적은 수 N개가 순서대로 주어진다. 칠판에 적은 수는 100,000보다 작거나 같은 자연수이다.
셋째 줄에는 홍준이가 한 질문의 개수 M (1 ≤ M ≤ 1,000,000)이 주어진다.
넷째 줄부터 M개의 줄에는 홍준이가 명우에게 한 질문 S와 E가 한 줄에 하나씩 주어진다.

출력
총 M개의 줄에 걸쳐 홍준이의 질문에 대한 명우의 답을 입력으로 주어진 순서에 따라서 출력한다.
팰린드롬인 경우에는 1, 아닌 경우에는 0을 출력한다.
*/



/*
solution:
(a,b)를 수열의 a번째~b번째 까지의 부분수열이라 하자.
(i, i)는 무조건 팰린드롬이다
(i, i+1)은 i번째 숫자와 i+1번째 숫자가 같으면 팰린드롬이다.

d[u][v] -> (u, v)가 팰린드롬이면 1, 아니면 0
(v-u >= 2일때) u번째 숫자와 v번째 숫자가 같고(p[u] == p[v]), d[u+1][v-1]이 팰린드롬이라면
d[u][v]가 팰린드롬임이 자명하다.
작은범위부터 구해간다.
*/
#include <iostream>
using namespace std;

int p[2001], d[2001][2001];
int n, m;
int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	cin >> n;
	for (int i = 1; i < n + 1; i++) {
		cin >> p[i];
		d[i][i] = 1;
	}
	for (int i = 1; i < n; i++) {
		if (p[i] == p[i + 1])
			d[i][i + 1] = 1;
	}
	for (int w = 2; w < n; w++) {
		for (int l = 1; l < n; l++) {
			int r = l + w;
			if (r > n) continue;
			if (p[l] == p[r] && d[l + 1][r - 1] == 1)
				d[l][r] = 1;
		}
	}
	cin >> m;
	while (m--) {
		int l, r;
		cin >> l >> r;
		cout << d[l][r] << '\n';
	}
}




