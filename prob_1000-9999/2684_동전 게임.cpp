/*
문제
동전게임은 주로 두 사람이 함께 즐기는 게임이다. 이 중 3-동전게임은 여러 명이 할 수 있는 게임이다.
각 사람은 각각 3-동전수열 중 하나를 선택한다. 3-동전수열이랑 앞 뒤 앞과 같은 수열이고, 8가지(뒤뒤뒤,뒤뒤앞,뒤앞뒤,뒤앞앞,앞뒤뒤,앞뒤앞,앞앞뒤,앞앞앞)가 있다.

이제 심판은 동전 1개를 40번 던진다. 그 다음 심판은 동전이 앞인지 뒤인지를 던진 순서대로 종이에 적는다.
그 다음 3-동전수열이 각각 몇 번씩 나왔는지 기록한다. 가장 많이 나온 수열을 선택한 사람이 이긴다.

동전 40번 던진 결과가 주어졌을 때, 3-동전수열이 각각 몇 번 나왔는지를 출력하는 프로그램을 작성하시오.
예를 들어, 40개의 동전이 모두 앞면일 경우 앞앞앞은 38번 나타난다.

입력
첫째 줄에 테스트 케이스의 개수 P(1 ≤ P ≤ 1000)가 주어진다.
각 테스트 케이스는 한 줄로 이루어져 있고, 동전을 40번 던진 결과가 주어진다.
이 때, 앞면은 H로, 뒷면은 T로 표현한다.

출력
각 테스트 케이스마다 3-동전수열이 몇 번 나타났는지를 출력한다.
뒤뒤뒤, 뒤뒤앞, 뒤앞뒤, 뒤앞앞, 앞뒤뒤, 앞뒤앞, 앞앞뒤, 앞앞앞 순서대로 공백으로 구분해서 출력한다.
*/


/*
solution:
3-동전수열을 그대로 map의 key로 잡는다.
iterator 반복을 통해 출력하면 0값은 나오지 않기 때문에
2진수를 응용하여 출력해준다.
*/
#include <iostream>
#include <map>
#include <string>
using namespace std;

int t;
int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	cin >> t;
	while (t--) {
		map<string, int> m;
		string s;
		cin >> s;
		for (int i = 0; s[i + 2]; i++) {
			m[s.substr(i, 3)]++;
		}
		for (int i = 0; i < 8; i++) {
			string x = (i & 4) ? "H" : "T";
			x += (i & 2) ? "H" : "T";
			x += (i & 1) ? "H" : "T";
			cout << m[x] << ' ';
		}
		cout << '\n';
	}
}