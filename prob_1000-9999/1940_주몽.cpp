/*
문제
주몽은 철기군을 양성하기 위한 프로젝트에 나섰다. 그래서 야철대장을 통해 철기군이 입을 갑옷을 만들게 하였다.
야철대장은 주몽의 명에 따르기 위하여 연구에 착수하던 중 아래와 같은 사실을 발견하게 되었다.
갑옷을 만드는 재료들은 각각 고유한 번호를 가지고 있다. 갑옷은 두 개의 재료로 만드는데
두 재료의 고유한 번호를 합쳐서 M(1<=M<=10,000,000)이 되면 정말로 강력한 갑옷이 만들어 지게 된다.
야철대장은 자신이 만들고 있는 재료를 가지고 갑옷을 몇 개나 만들 수 있는지 궁금해졌다.
이러한 궁금증을 풀어 주기 위하여 N(1<=N<=15,000) 개의 재료와 M이 주어졌을 때 몇 개의 철갑옷을 만들 수 있는지를 구하는 프로그램을 작성하시오.

입력
첫째 줄에는 재료의 개수 N(1<=N<=15,000)이 주어진다.
그리고 두 번째 줄에는 갑옷을 만드는데 필요한 숫자 M(1<=M<=10,000,000) 주어진다.
마지막으로 셋째 줄에는 N개의 재료들이 가진 고유한 번호들이 공백을 사이에 두고 주어진다.

출력
첫째 줄에 갑옷을 만들 수 있는 개수를 출력한다.
*/


/*
solution:
정렬한 뒤
방법 1) 양 끝에서부터 하나씩 비교해가며 더했을 때 m이 되는지 체크
방법 2) 처음부터 탐색하며 해당노드의 다음노드~마지막노드 사이에 (m-노드)인 값이 있는지 lower_bound로 탐색

1)은 O(N)
2)는 O(NlogN)
*/
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int n, m;
vector<int> p;
int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	cin >> n >> m;
	for (int i = 0; i < n; i++) {
		int x;
		cin >> x;
		p.push_back(x);
	}

	int ans = 0;
	sort(p.begin(), p.end());
	for (auto it = p.begin(); it != p.end(); it++) {
		if (m - (*it) < 0) {
			break;
		}
		auto t = lower_bound(it + 1, p.end(), m - (*it));
		if (t == p.end()) continue;
		if ((*t) == m - (*it)) {
			ans++;
			p.erase(t);
		}
	}
	cout << ans;
}